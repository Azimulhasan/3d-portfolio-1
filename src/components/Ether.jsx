/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 ether.gltf --transform
Author: arthur (https://sketchfab.com/Arthur_mf)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/ethereum-ac40cebf61464c548776a0c20b47ccc7
Title: Ethereum
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'

export default function Model(props) {
  const { nodes, materials } = useGLTF('/ether-transformed.glb')
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Object_4.geometry} material={materials['Material.004']} position={[-0.22, 0, -0.38]} rotation={[Math.PI / 2, 0, 0]} scale={2.41} />
      <mesh geometry={nodes.Object_6.geometry} material={materials['Material.005']} position={[-0.22, 0, -0.38]} rotation={[Math.PI / 2, 0, 0]} scale={2.41} />
      <mesh geometry={nodes.Object_8.geometry} material={materials['Material.007']} position={[3, 0, -0.99]} rotation={[Math.PI / 2, 0, 0]} scale={2.41} />
      <mesh geometry={nodes.Object_10.geometry} material={materials['Material.003']} position={[3, 0, -0.99]} rotation={[Math.PI / 2, 0, 0]} scale={2.41} />
      <mesh geometry={nodes.Object_12.geometry} material={materials['Material.006']} position={[3, 0, -0.99]} rotation={[Math.PI / 2, 0, 0]} scale={2.41} />
      <mesh geometry={nodes.Object_14.geometry} material={materials['Material.001']} position={[-0.22, 0, -0.38]} rotation={[Math.PI / 2, 0, 0]} scale={2.41} />
    </group>
  )
}

useGLTF.preload('/ether-transformed.glb')
